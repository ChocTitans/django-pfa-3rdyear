    );
        }),
        (n._getDimension = function () {
          return this._element.classList.contains("width") ? "width" : "height";
        }),
        (n._getParent = function () {
          var t = this,
            e = this._config.parent;
          g(e)
            ? (void 0 === e.jquery && void 0 === e[0]) || (e = e[0])
            : (e = V.findOne(e));
          var n = '[data-bs-toggle="collapse"][data-bs-parent="' + e + '"]';
          return (
            V.find(n, e).forEach(function (e) {
              var n = f(e);
              t._addAriaAndCollapsedClass(n, [e]);
            }),
            e
          );
        }),
        (n._addAriaAndCollapsedClass = function (t, e) {
          if (t && e.length) {
            var n = t.classList.contains("show");
            e.forEach(function (t) {
              n
                ? t.classList.remove("collapsed")
                : t.classList.add("collapsed"),
                t.setAttribute("aria-expanded", n);
            });
          }
        }),
        (e.collapseInterface = function (t, n) {
          var i = L(t, "bs.collapse"),
            o = s(
              {},
              it,
              q.getDataAttributes(t),
              "object" == typeof n && n ? n : {}
            );
          if (
            (!i &&
              o.toggle &&
              "string" == typeof n &&
              /show|hide/.test(n) &&
              (o.toggle = !1),
            i || (i = new e(t, o)),
            "string" == typeof n)
          ) {
            if (void 0 === i[n])
              throw new TypeError('No method named "' + n + '"');
            i[n]();
          }
        }),
        (e.jQueryInterface = function (t) {
          return this.each(function () {
            e.collapseInterface(this, t);
          });
        }),
        o(e, null, [
          {
            key: "Default",
            get: function () {
              return it;
            },
          },
          {
            key: "DATA_KEY",
            get: function () {
              return "bs.collapse";
            },
          },
        ]),
        e
      );
    })(U);
  Q.on(
    document,
    "click.bs.collapse.data-api",
    '[data-bs-toggle="collapse"]',
    function (t) {
      "A" === t.target.tagName && t.preventDefault();
      var e = q.getDataAttributes(this),
        n = d(this);
      V.find(n).forEach(function (t) {
        var n,
          i = L(t, "bs.collapse");
        i
          ? (null === i._parent &&
              "string" == typeof e.parent &&
              ((i._config.parent = e.parent), (i._parent = i._getParent())),
            (n = "toggle"))
          : (n = e),
          st.collapseInterface(t, n);
      });
    }
  ),
    E(function () {
      var t = w();
      if (t) {
        var e = t.fn[nt];
        (t.fn[nt] = st.jQueryInterface),
          (t.fn[nt].Constructor = st),
          (t.fn[nt].noConflict = function () {
            return (t.fn[nt] = e), st.jQueryInterface;
          });
      }
    });
  var rt = "dropdown",
    at = new RegExp("ArrowUp|ArrowDown|Escape"),
    lt = T ? "top-end" : "top-start",
    ct = T ? "top-start" : "top-end",
    ut = T ? "bottom-end" : "bottom-start",
    dt = T ? "bottom-start" : "bottom-end",
    ft = T ? "left-start" : "right-start",
    ht = T ? "right-start" : "left-start",
    pt = {
      offset: 0,
      flip: !0,
      boundary: "clippingParents",
      reference: "toggle",
      display: "dynamic",
      popperConfig: null,
    },
    gt = {
      offset: "(number|string|function)",
      flip: "boolean",
      boundary: "(string|element)",
      reference: "(string|element)",
      display: "string",
      popperConfig: "(null|object)",
    },
    mt = (function (e) {
      function i(t, n) {
        var i;
        return (
          ((i = e.call(this, t) || this)._popper = null),
          (i._config = i._getConfig(n)),
          (i._menu = i._getMenuElement()),
          (i._inNavbar = i._detectNavbar()),
          i._addEventListeners(),
          i
        );
      }
      r(i, e);
      var a = i.prototype;
      return (
        (a.toggle = function () {
          if (
            !this._element.disabled &&
            !this._element.classList.contains("disabled")
          ) {
            var t = this._element.classList.contains("show");
            i.clearMenus(), t || this.show();
          }
        }),
        (a.show = function () {
          if (
            !(
              this._element.disabled ||
              this._element.classList.contains("disabled") ||
              this._menu.classList.contains("show")
            )
          ) {
            var e = i.getParentFromElement(this._element),
              o = { relatedTarget: this._element };
            if (
              !Q.trigger(this._element, "show.bs.dropdown", o).defaultPrevented
            ) {
              if (!this._inNavbar) {
                if (void 0 === n)
                  throw new TypeError(
                    "Bootstrap's dropdowns require Popper (https://popper.js.org)"
                  );
                var s = this._element;
                "parent" === this._config.reference
                  ? (s = e)
                  : g(this._config.reference) &&
                    ((s = this._config.reference),
                    void 0 !== this._config.reference.jquery &&
                      (s = this._config.reference[0])),
                  (this._popper = t.createPopper(
                    s,
                    this._menu,
                    this._getPopperConfig()
                  ));
              }
              var r;
              if (
                "ontouchstart" in document.documentElement &&
                !e.closest(".navbar-nav")
              )
                (r = []).concat
                  .apply(r, document.body.children)
                  .forEach(function (t) {
                    return Q.on(t, "mouseover", null, function () {});
                  });
              this._element.focus(),
                this._element.setAttribute("aria-expanded", !0),
                this._menu.classList.toggle("show"),
                this._element.classList.toggle("show"),
                Q.trigger(e, "shown.bs.dropdown", o);
            }
          }
        }),
        (a.hide = function () {
          if (
            !this._element.disabled &&
            !this._element.classList.contains("disabled") &&
            this._menu.classList.contains("show")
          ) {
            var t = i.getParentFromElement(this._element),
              e = { relatedTarget: this._element };
            Q.trigger(t, "hide.bs.dropdown", e).defaultPrevented ||
              (this._popper && this._popper.destroy(),
              this._menu.classList.toggle("show"),
              this._element.classList.toggle("show"),
              Q.trigger(t, "hidden.bs.dropdown", e));
          }
        }),
        (a.dispose = function () {
          e.prototype.dispose.call(this),
            Q.off(this._element, ".bs.dropdown"),
            (this._menu = null),
            this._popper && (this._popper.destroy(), (this._popper = null));
        }),
        (a.update = function () {
          (this._inNavbar = this._detectNavbar()),
            this._popper && this._popper.update();
        }),
        (a._addEventListeners = function () {
          var t = this;
          Q.on(this._element, "click.bs.dropdown", function (e) {
            e.preventDefault(), e.stopPropagation(), t.toggle();
          });
        }),
        (a._getConfig = function (t) {
          return (
            (t = s(
              {},
              this.constructor.Default,
              q.getDataAttributes(this._element),
              t
            )),
            _(rt, t, this.constructor.DefaultType),
            t
          );
        }),
        (a._getMenuElement = function () {
          return V.next(this._element, ".dropdown-menu")[0];
        }),
        (a._getPlacement = function () {
          var t = this._element.parentNode;
          if (t.classList.contains("dropend")) return ft;
          if (t.classList.contains("dropstart")) return ht;
          var e =
            "end" ===
            getComputedStyle(this._menu)
              .getPropertyValue("--bs-position")
              .trim();
          return t.classList.contains("dropup") ? (e ? ct : lt) : e ? dt : ut;
        }),
        (a._detectNavbar = function () {
          return null !== this._element.closest(".navbar");
        }),
        (a._getPopperConfig = function () {
          var t = {
            placement: this._getPlacement(),
            modifiers: [
              {
                name: "preventOverflow",
                options: {
                  altBoundary: this._config.flip,
                  rootBoundary: this._config.boundary,
                },
              },
            ],
          };
          return (
            "static" === this._config.display &&
              (t.modifiers = [{ name: "applyStyles", enabled: !1 }]),
            s({}, t, this._config.popperConfig)
          );
        }),
        (i.dropdownInterface = function (t, e) {
          var n = L(t, "bs.dropdown");
          if (
            (n || (n = new i(t, "object" == typeof e ? e : null)),
            "string" == typeof e)
          ) {
            if (void 0 === n[e])
              throw new TypeError('No method named "' + e + '"');
            n[e]();
          }
        }),
        (i.jQueryInterface = function (t) {
          return this.each(function () {
            i.dropdownInterface(this, t);
          });
        }),
        (i.clearMenus = function (t) {
          if (!t || (2 !== t.button && ("keyup" !== t.type || "Tab" === t.key)))
            for (
              var e = V.find('[data-bs-toggle="dropdown"]'),
                n = 0,
                o = e.length;
              n < o;
              n++
            ) {
              var s = i.getParentFromElement(e[n]),
                r = L(e[n], "bs.dropdown"),
                a = { relatedTarget: e[n] };
              if ((t && "click" === t.type && (a.clickEvent = t), r)) {
                var l = r._menu;
                if (e[n].classList.contains("show"))
                  if (
                    !(
                      t &&
                      (("click" === t.type &&
                        /input|textarea/i.test(t.target.tagName)) ||
                        ("keyup" === t.type && "Tab" === t.key)) &&
                      l.contains(t.target)
                    )
                  )
                    if (!Q.trigger(s, "hide.bs.dropdown", a).defaultPrevented) {
                      var c;
                      if ("ontouchstart" in document.documentElement)
                        (c = []).concat
                          .apply(c, document.body.children)
                          .forEach(function (t) {
                            return Q.off(t, "mouseover", null, function () {});
                          });
                      e[n].setAttribute("aria-expanded", "false"),
                        r._popper && r._popper.destroy(),
                        l.classList.remove("show"),
                        e[n].classList.remove("show"),
                        Q.trigger(s, "hidden.bs.dropdown", a);
                    }
              }
            }
        }),
        (i.getParentFromElement = function (t) {
          return f(t) || t.parentNode;
        }),
        (i.dataApiKeydownHandler = function (t) {
          if (
            !(/input|textarea/i.test(t.target.tagName)
              ? "Space" === t.key ||
                ("Escape" !== t.key &&
                  (("ArrowDown" !== t.key && "ArrowUp" !== t.key) ||
                    t.target.closest(".dropdown-menu")))
              : !at.test(t.key)) &&
            (t.preventDefault(),
            t.stopPropagation(),
            !this.disabled && !this.classList.contains("disabled"))
          ) {
            var e = i.getParentFromElement(this),
              n = this.classList.contains("show");
            if ("Escape" === t.key)
              return (
                (this.matches('[data-bs-toggle="dropdown"]')
                  ? this
                  : V.prev(this, '[data-bs-toggle="dropdown"]')[0]
                ).focus(),
                void i.clearMenus()
              );
            if (n && "Space" !== t.key) {
              var o = V.find(
                ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
                e
              ).filter(v);
              if (o.length) {
                var s = o.indexOf(t.target);
                "ArrowUp" === t.key && s > 0 && s--,
                  "ArrowDown" === t.key && s < o.length - 1 && s++,
                  o[(s = -1 === s ? 0 : s)].focus();
              }
            } else i.clearMenus();
          }
        }),
        o(i, null, [
          {
            key: "Default",
            get: function () {
              return pt;
            },
          },
          {
            key: "DefaultType",
            get: function () {
              return gt;
            },
          },
          {
            key: "DATA_KEY",
            get: function () {
              return "bs.dropdown";
            },
          },
        ]),
        i
      );
    })(U);
  Q.on(
    document,
    "keydown.bs.dropdown.data-api",
    '[data-bs-toggle="dropdown"]',
    mt.dataApiKeydownHandler
  ),
    Q.on(
      document,
      "keydown.bs.dropdown.data-api",
      ".dropdown-menu",
      mt.dataApiKeydownHandler
    ),
    Q.on(document, "click.bs.dropdown.data-api", mt.clearMenus),
    Q.on(document, "keyup.bs.dropdown.data-api", mt.clearMenus),
    Q.on(
      document,
      "click.bs.dropdown.data-api",
      '[data-bs-toggle="dropdown"]',
      function (t) {
        t.preventDefault(),
          t.stopPropagation(),
          mt.dropdownInterface(this, "toggle");
      }
    ),
    Q.on(
      document,
      "click.bs.dropdown.data-api",
      ".dropdown form",
      function (t) {
        return t.stopPropagation();
      }
    ),
    E(function () {
      var t = w();
      if (t) {
        var e = t.fn[rt];
        (t.fn[rt] = mt.jQueryInterface),
          (t.fn[rt].Constructor = mt),
          (t.fn[rt].noConflict = function () {
            return (t.fn[rt] = e), mt.jQueryInterface;
          });
      }
    });
  var _t = { backdrop: !0, keyboard: !0, focus: !0 },
    vt = {
      backdrop: "(boolean|string)",
      keyboard: "boolean",
      focus: "boolean",
    },
    bt = (function (t) {
      function e(e, n) {
        var i;
        return (
          ((i = t.call(this, e) || this)._config = i._getConfig(n)),
          (i._dialog = V.findOne(".modal-dialog", e)),
          (i._backdrop = null),
          (i._isShown = !1),
          (i._isBodyOverflowing = !1),
          (i._ignoreBackdropClick = !1),
          (i._isTransitioning = !1),
          (i._scrollbarWidth = 0),
          i
        );
      }
      r(e, t);
      var n = e.prototype;
      return (
        (n.toggle = function (t) {
          return this._isShown ? this.hide() : this.show(t);
        }),
        (n.show = function (t) {
          var e = this;
          if (!this._isShown && !this._isTransitioning) {
            this._element.classList.contains("fade") &&
              (this._isTransitioning = !0);
            var n = Q.trigger(this._element, "show.bs.modal", {
              relatedTarget: t,
            });
            this._isShown ||
              n.defaultPrevented ||
              ((this._isShown = !0),
              this._checkScrollbar(),
              this._setScrollbar(),
              this._adjustDialog(),
              this._setEscapeEvent(),
              this._setResizeEvent(),
              Q.on(
                this._element,
                "click.dismiss.bs.modal",
                '[data-bs-dismiss="modal"]',
                function (t) {
                  return e.hide(t);
                }
              ),
              Q.on(this._dialog, "mousedown.dismiss.bs.modal", function () {
                Q.one(e._element, "mouseup.dismiss.bs.modal", function (t) {
                  t.target === e._element && (e._ignoreBackdropClick = !0);
                });
              }),
              this._showBackdrop(function () {
                return e._showElement(t);
              }));
          }
        }),
        (n.hide = function (t) {
          var e = this;
          if (
            (t && t.preventDefault(),
            this._isShown && !this._isTransitioning) &&
            !Q.trigger(this._element, "hide.bs.modal").defaultPrevented
          ) {
            this._isShown = !1;
            var n = this._element.classList.contains("fade");
            if (
              (n && (this._isTransitioning = !0),
              this._setEscapeEvent(),
              this._setResizeEvent(),
              Q.off(document, "focusin.bs.modal"),
              this._element.classList.remove("show"),
              Q.off(this._element, "click.dismiss.bs.modal"),
              Q.off(this._dialog, "mousedown.dismiss.bs.modal"),
              n)
            ) {
              var i = h(this._element);
              Q.one(this._element, "transitionend", function (t) {
                return e._hideModal(t);
              }),
                m(this._element, i);
            } else this._hideModal();
          }
        }),
        (n.dispose = function () {
          [window, this._element, this._dialog].forEach(function (t) {
            return Q.off(t, ".bs.modal");
          }),
            t.prototype.dispose.call(this),
            Q.off(document, "focusin.bs.modal"),
            (this._config = null),
            (this._dialog = null),
            (this._backdrop = null),
            (this._isShown = null),
            (this._isBodyOverflowing = null),
            (this._ignoreBackdropClick = null),
            (this._isTransitioning = null),
            (this._scrollbarWidth = null);
        }),
        (n.handleUpdate = function () {
          this._adjustDialog();
        }),
        (n._getConfig = function (t) {
          return (t = s({}, _t, t)), _("modal", t, vt), t;
        }),
        (n._showElement = function (t) {
          var e = this,
            n = this._element.classList.contains("fade"),
            i = V.findOne(".modal-body", this._dialog);
          (this._element.parentNode &&
            this._element.parentNode.nodeType === Node.ELEMENT_NODE) ||
            document.body.appendChild(this._element),
            (this._element.style.display = "block"),
            this._element.removeAttribute("aria-hidden"),
            this._element.setAttribute("aria-modal", !0),
            this._element.setAttribute("role", "dialog"),
            (this._element.scrollTop = 0),
            i && (i.scrollTop = 0),
            n && y(this._element),
            this._element.classList.add("show"),
            this._config.focus && this._enforceFocus();
          var o = function () {
            e._config.focus && e._element.focus(),
              (e._isTransitioning = !1),
              Q.trigger(e._element, "shown.bs.modal", { relatedTarget: t });
          };
          if (n) {
            var s = h(this._dialog);
            Q.one(this._dialog, "transitionend", o), m(this._dialog, s);
          } else o();
        }),
        (n._enforceFocus = function () {
          var t = this;
          Q.off(document, "focusin.bs.modal"),
            Q.on(document, "focusin.bs.modal", function (e) {
              document === e.target ||
                t._element === e.target ||
                t._element.contains(e.target) ||
                t._element.focus();
            });
        }),
        (n._setEscapeEvent = function () {
          var t = this;
          this._isShown
            ? Q.on(this._element, "keydown.dismiss.bs.modal", function (e) {
                t._config.keyboard && "Escape" === e.key
                  ? (e.preventDefault(), t.hide())
                  : t._config.keyboard ||
                    "Escape" !== e.key ||
                    t._triggerBackdropTransition();
              })
            : Q.off(this._element, "keydown.dismiss.bs.modal");
        }),
        (n._setResizeEvent = function () {
          var t = this;
          this._isShown
            ? Q.on(window, "resize.bs.modal", function () {
                return t._adjustDialog();
              })
            : Q.off(window, "resize.bs.modal");
        }),
        (n._hideModal = function () {
          var t = this;
          (this._element.style.display = "none"),
            this._element.setAttribute("aria-hidden", !0),
            this._element.removeAttribute("aria-modal"),
            this._element.removeAttribute("role"),
            (this._isTransitioning = !1),
            this._showBackdrop(function () {
              document.body.classList.remove("modal-open"),
                t._resetAdjustments(),
                t._resetScrollbar(),
                Q.trigger(t._element, "hidden.bs.modal");
            });
        }),
        (n._removeBackdrop = function () {
          this._backdrop.parentNode.removeChild(this._backdrop),
            (this._backdrop = null);
        }),
        (n._showBackdrop = function (t) {
          var e = this,
            n = this._element.classList.contains("fade") ? "fade" : "";
          if (this._isShown && this._config.backdrop) {
            if (
              ((this._backdrop = document.createElement("div")),
              (this._backdrop.className = "modal-backdrop"),
              n && this._backdrop.classList.add(n),
              document.body.appendChild(this._backdrop),
              Q.on(this._element, "click.dismiss.bs.modal", function (t) {
                e._ignoreBackdropClick
                  ? (e._ignoreBackdropClick = !1)
                  : t.target === t.currentTarget &&
                    ("static" === e._config.backdrop
                      ? e._triggerBackdropTransition()
                      : e.hide());
              }),
              n && y(this._backdrop),
              this._backdrop.classList.add("show"),
              !n)
            )
              return void t();
            var i = h(this._backdrop);
            Q.one(this._backdrop, "transitionend", t), m(this._backdrop, i);
          } else if (!this._isShown && this._backdrop) {
            this._backdrop.classList.remove("show");
            var o = function () {
              e._removeBackdrop(), t();
            };
            if (this._element.classList.contains("fade")) {
              var s = h(this._backdrop);
              Q.one(this._backdrop, "transitionend", o), m(this._backdrop, s);
            } else o();
          } else t();
        }),
        (n._triggerBackdropTransition = function () {
          var t = this;
          if (
            !Q.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented
          ) {
            var e =
              this._element.scrollHeight >
              document.documentElement.clientHeight;
            e || (this._element.style.overflowY = "hidden"),
              this._element.classList.add("modal-static");
            var n = h(this._dialog);
            Q.off(this._element, "transitionend"),
              Q.one(this._element, "transitionend", function () {
                t._element.classList.remove("modal-static"),
                  e ||
                    (Q.one(t._element, "transitionend", function () {
                      t._element.style.overflowY = "";
                    }),
                    m(t._element, n));
              }),
              m(this._element, n),
              this._element.focus();
          }
        }),
        (n._adjustDialog = function () {
          var t =
            this._element.scrollHeight > document.documentElement.clientHeight;
          ((!this._isBodyOverflowing && t && !T) ||
            (this._isBodyOverflowing && !t && T)) &&
            (this._element.style.paddingLeft = this._scrollbarWidth + "px"),
            ((this._isBodyOverflowing && !t && !T) ||
              (!this._isBodyOverflowing && t && T)) &&
              (this._element.style.paddingRight = this._scrollbarWidth + "px");
        }),
        (n._resetAdjustments = function () {
          (this._element.style.paddingLeft = ""),
            (this._element.style.paddingRight = "");
        }),
        (n._checkScrollbar = function () {
          var t = document.body.getBoundingClientRect();
          (this._isBodyOverflowing =
            Math.round(t.left + t.right) < window.innerWidth),
            (this._scrollbarWidth = this._getScrollbarWidth());
        }),
        (n._setScrollbar = function () {
          var t = this;
          if (this._isBodyOverflowing) {
            V.find(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top").forEach(
              function (e) {
                var n = e.style.paddingRight,
                  i = window.getComputedStyle(e)["padding-right"];
                q.setDataAttribute(e, "padding-right", n),
                  (e.style.paddingRight =
                    Number.parseFloat(i) + t._scrollbarWidth + "px");
              }
            ),
              V.find(".sticky-top").forEach(function (e) {
                var n = e.style.marginRight,
                  i = window.getComputedStyle(e)["margin-right"];
                q.setDataAttribute(e, "margin-right", n),
                  (e.style.marginRight =
                    Number.parseFloat(i) - t._scrollbarWidth + "px");
              });
            var e = document.body.style.paddingRight,
              n = window.getComputedStyle(document.body)["padding-right"];
            q.setDataAttribute(document.body, "padding-right", e),
              (document.body.style.paddingRight =
                Number.parseFloat(n) + this._scrollbarWidth + "px");
          }
          document.body.classList.add("modal-open");
        }),
        (n._resetScrollbar = function () {
          V.find(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top").forEach(
            function (t) {
              var e = q.getDataAttribute(t, "padding-right");
              void 0 !== e &&
                (q.removeDataAttribute(t, "padding-right"),
                (t.style.paddingRight = e));
            }
          ),
            V.find(".sticky-top").forEach(function (t) {
              var e = q.getDataAttribute(t, "margin-right");
              void 0 !== e &&
                (q.removeDataAttribute(t, "margin-right"),
                (t.style.marginRight = e));
            });
          var t = q.getDataAttribute(document.body, "padding-right");
          void 0 === t
            ? (document.body.style.paddingRight = "")
            : (q.removeDataAttribute(document.body, "padding-right"),
              (document.body.style.paddingRight = t));
        }),
        (n._getScrollbarWidth = function () {
          var t = document.createElement("div");
          (t.className = "modal-scrollbar-measure"),
            document.body.appendChild(t);
          var e = t.getBoundingClientRect().width - t.clientWidth;
          return document.body.removeChild(t), e;
        }),
        (e.jQueryInterface = function (t, n) {
          return this.each(function () {
            var i = L(this, "bs.modal"),
              o = s(
                {},
                _t,
                q.getDataAttributes(this),
                "object" == typeof t && t ? t : {}
              );
            if ((i || (i = new e(this, o)), "string" == typeof t)) {
              if (void 0 === i[t])
                throw new TypeError('No method named "' + t + '"');
              i[t](n);
            }
          });
        }),
        o(e, null, [
          {
            key: "Default",
            get: function () {
              return _t;
            },
          },
          {
            key: "DATA_KEY",
            get: function () {
              return "bs.modal";
            },
          },
        ]),
        e
      );
    })(U);
  Q.on(
    document,
    "click.bs.modal.data-api",
    '[data-bs-toggle="modal"]',
    function (t) {
      var e = this,
        n = f(this);
      ("A" !== this.tagName && "AREA" !== this.tagName) || t.preventDefault(),
        Q.one(n, "show.bs.modal", function (t) {
          t.defaultPrevented ||
            Q.one(n, "hidden.bs.modal", function () {
              v(e) && e.focus();
            });
        });
      var i = L(n, "bs.modal");
      if (!i) {
        var o = s({}, q.getDataAttributes(n), q.getDataAttributes(this));
        i = new bt(n, o);
      }
      i.show(this);
    }
  ),
    E(function () {
      var t = w();
      if (t) {
        var e = t.fn.modal;
        (t.fn.modal = bt.jQueryInterface),
          (t.fn.modal.Constructor = bt),
          (t.fn.modal.noConflict = function () {
            return (t.fn.modal = e), bt.jQueryInterface;
          });
      }
    });
  var yt = new Set([
      "background",
      "cite",
      "href",
      "itemtype",
      "longdesc",
      "poster",
      "src",
      "xlink:href",
    ]),
    wt = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,
    Et =
      /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,
    Tt = {
      "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
      a: ["target", "href", "title", "rel"],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      div: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ["src", "srcset", "alt", "title", "width", "height"],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: [],
    };
  function kt(t, e, n) {
    var i;
    if (!t.length) return t;
    if (n && "function" == typeof n) return n(t);
    for (
      var o = new window.DOMParser().parseFromString(t, "text/html"),
        s = Object.keys(e),
        r = (i = []).concat.apply(i, o.body.querySelectorAll("*")),
        a = function (t, n) {
          var i,
            o = r[t],
            a = o.nodeName.toLowerCase();
          if (!s.includes(a)) return o.parentNode.removeChild(o), "continue";
          var l = (i = []).concat.apply(i, o.attributes),
            c = [].concat(e["*"] || [], e[a] || []);
          l.forEach(function (t) {
            (function (t, e) {
              var n = t.nodeName.toLowerCase();
              if (e.includes(n))
                return (
                  !yt.has(n) ||
                  Boolean(t.nodeValue.match(wt) || t.nodeValue.match(Et))
                );
              for (
                var i = e.filter(function (t) {
   